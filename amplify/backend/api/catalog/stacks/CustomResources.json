{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "An auto-generated nested stack.",
	"Metadata": {},
	"Parameters": {
		"AppSyncApiId": {
			"Type": "String",
			"Description": "The id of the AppSync API associated with this project."
		},
		"AppSyncApiName": {
			"Type": "String",
			"Description": "The name of the AppSync API",
			"Default": "AppSyncSimpleTransform"
		},
		"env": {
			"Type": "String",
			"Description": "The environment name. e.g. Dev, Test, or Production",
			"Default": "NONE"
		},
		"S3DeploymentBucket": {
			"Type": "String",
			"Description": "The S3 bucket containing all deployment assets for the project."
		},
		"S3DeploymentRootKey": {
			"Type": "String",
			"Description": "An S3 key relative to the S3DeploymentBucket that points to the root\nof the deployment directory."
		},
		"FlightDataSource": {
			"Type": "String",
			"Description": "Flight Data Source Name",
			"Default": "FlightTable"
		},
		"BookingDataSource": {
			"Type": "String",
			"Description": "Booking Data Source Name",
			"Default": "BookingTable"
		}		
	},
	"Resources": {
		"PaymentApiDatasource": {
			"Type": "AWS::AppSync::DataSource",
			"Properties": {
				"Description": "Payment API to collect, verify and refund payments",
				"Type": "HTTP",
				"Name": "PaymentApi",
				"ApiId": {
					"Ref": "AppSyncApiId"
				},
				"HttpConfig": {
					"Endpoint": "https://httpbin.org"
				}
			}
		},
		"ReserveFlightFunction": {
			"Type": "AWS::AppSync::FunctionConfiguration",
			"Properties": {
				"ApiId": {
					"Ref": "AppSyncApiId"
				},
				"Name": "ReserveFlight",
				"Description": "Updates Flight Table and decreases Seat Allocation for a given flight",
				"DataSourceName": {
					"Ref": "FlightDataSource"
				},
				"RequestMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Function.ReserveFlight.req.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},
				"ResponseMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Function.ReserveFlight.res.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},								
				"FunctionVersion": "2018-05-29"
			}
		},
		"ReserveBookingFunction": {
			"Type": "AWS::AppSync::FunctionConfiguration",
			"Properties": {
				"ApiId": {
					"Ref": "AppSyncApiId"
				},
				"Name": "ReserveBooking",
				"Description": "Creates a new Booking in the Booking Table with status UNCONFIRMED",
				"DataSourceName": {
					"Ref": "BookingDataSource"
				},
				"RequestMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Function.ReserveBooking.req.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},
				"ResponseMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Function.ReserveBooking.res.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},					
				"FunctionVersion": "2018-05-29"
			}
		},
		"VerifyPaymentFunction": {
			"Type": "AWS::AppSync::FunctionConfiguration",
			"Properties": {
				"ApiId": {
					"Ref": "AppSyncApiId"
				},
				"Name": "VerifyPayment",
				"Description": "Verifies collected payment with flight information",
				"DataSourceName": {
					"Fn::GetAtt": [
						"PaymentApiDatasource",
						"Name"
					]
				},
				"RequestMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Function.VerifyPayment.req.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},
				"ResponseMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Function.VerifyPayment.res.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},				
				"FunctionVersion": "2018-05-29"
			}
		},
		"ProcessBookingResolver": {
			"Type": "AWS::AppSync::Resolver",
			"Properties": {
				"ApiId": {
					"Ref": "AppSyncApiId"
				},
				"TypeName": "Mutation",
				"FieldName": "processBooking",
				"RequestMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Mutation.ProcessBooking.req.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},
				"ResponseMappingTemplateS3Location": {
					"Fn::Sub": [
					  "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Mutation.ProcessBooking.res.vtl",
					  {
						"S3DeploymentBucket": {
						  "Ref": "S3DeploymentBucket"
						},
						"S3DeploymentRootKey": {
						  "Ref": "S3DeploymentRootKey"
						}
					  }
					]
				},				
				"Kind": "PIPELINE",
				"PipelineConfig": {
					"Functions": [
						{
							"Fn::GetAtt": [
								"VerifyPaymentFunction",
								"FunctionId"
							]
						},
						{
							"Fn::GetAtt": [
								"ReserveFlightFunction",
								"FunctionId"
							]
						},
						{
							"Fn::GetAtt": [
								"ReserveBookingFunction",
								"FunctionId"
							]
						}
					]
				}
			}
		}
	},
	"Conditions": {
		"HasEnvironmentParameter": {
			"Fn::Not": [
				{
					"Fn::Equals": [
						{
							"Ref": "env"
						},
						"NONE"
					]
				}
			]
		},
		"AlwaysFalse": {
			"Fn::Equals": [
				"true",
				"false"
			]
		}
	},
	"Outputs": {
		"EmptyOutput": {
			"Description": "An empty output. You may delete this if you have at least one resource above.",
			"Value": ""
		}
	}
}